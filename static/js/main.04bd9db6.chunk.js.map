{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","this","htmlFor","type","id","onChange","Component","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"sMAcMA,EAAc,WAChB,OACI,gCACE,+BACE,sCACA,2CAMNC,EAAY,SAACC,GACf,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACzC,OACE,+BACE,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACE,wBAAQC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAA7C,wBAJKA,MAUb,OAAO,gCAAQJ,KAGJS,EAtCD,SAACV,GACb,IAAOE,EAAkCF,EAAlCE,cAAeO,EAAmBT,EAAnBS,gBAEtB,OACE,kCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWP,cAAeA,EAAeO,gBAAiBA,Q,OCP1DE,E,4MACFC,aAAe,CACX,KAAQ,GACR,IAAO,I,EAGXC,MAAQ,EAAKD,a,EAEbE,aAAe,SAACC,GACZ,MAAsBA,EAAMC,OAArBV,EAAP,EAAOA,KAAMW,EAAb,EAAaA,MAEb,EAAKC,SAAL,eACKZ,EAAOW,K,EAIhBE,WAAa,WACT,EAAKnB,MAAMoB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,4CAGvB,WACI,MAAoBS,KAAKR,MAAlBP,EAAP,EAAOA,KAAMC,EAAb,EAAaA,IAEb,OACI,iCACI,uBAAOe,QAAQ,OAAf,kBACA,uBAAOC,KAAK,OAAOjB,KAAK,OAAOkB,GAAG,OAAOP,MAAOX,EAAMmB,SAAUJ,KAAKP,eACrE,uBAAOQ,QAAQ,MAAf,iBACA,uBAAOC,KAAK,OAAOjB,KAAK,MAAMkB,GAAG,MAAMP,MAAOV,EAAKkB,SAAUJ,KAAKP,eAClE,uBAAOS,KAAK,SAASN,MAAM,SAAST,QAASa,KAAKF,oB,GA9B/CO,aAoCJf,IClCTgB,E,4MACFd,MAAQ,CACJe,WAAY,I,EAGhBnB,gBAAkB,SAACJ,GACf,IAAOuB,EAAc,EAAKf,MAAnBe,WAEP,EAAKV,SAAS,CACVU,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACtC,OAAOA,IAAM1B,Q,EAKzBe,aAAe,SAACU,GACZ,EAAKZ,SAAS,CACVU,WAAW,GAAD,mBAAM,EAAKf,MAAMe,YAAjB,CAA6BE,O,4CAI/C,WACI,IAAOF,EAAcP,KAAKR,MAAnBe,WACP,OACI,sBAAKI,UAAU,YAAf,UACI,cAAC,EAAD,CAAO9B,cAAe0B,EAAYnB,gBAAiBY,KAAKZ,kBACxD,cAAC,EAAD,CAAMW,aAAcC,KAAKD,sB,GA1BvBM,aAgCHC,I,MC/BfM,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.04bd9db6.chunk.js","sourcesContent":["import React, {Component} from 'react'\n\n\nconst Table = (props) => {\n  const {characterData, removeCharacter} = props;\n\n  return(\n    <table>\n      <TableHeader />\n      <TableBody characterData={characterData} removeCharacter={removeCharacter} />\n    </table>\n  );\n};\n\nconst TableHeader = () => {\n    return(\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Job</th>\n          </tr>\n        </thead>\n    );\n};\n\nconst TableBody = (props) => {\n    const rows = props.characterData.map((row, index) => {\n      return(\n        <tr key={index}>\n          <td>{row.name}</td>\n          <td>{row.job}</td>\n          <td>\n            <button onClick={() => props.removeCharacter(index)}>Delete</button>\n          </td>\n        </tr>\n      );\n    });\n\n    return(<tbody>{rows}</tbody>);\n};\n\nexport default Table","import React, {Component} from \"react\";\n\nclass Form extends Component {\n    initialState = {\n        \"name\": \"\",\n        \"job\": \"\"\n    };\n\n    state = this.initialState;\n\n    handleChange = (event) => {\n        const {name, value} = event.target;\n\n        this.setState({\n            [name]: value\n        });\n    };\n\n    submitForm = () => {\n        this.props.handleSubmit(this.state);\n        this.setState(this.initialState);\n    }\n\n    render(){\n        const {name, job} = this.state;\n\n        return(\n            <form>\n                <label htmlFor=\"name\">Name</label>\n                <input type=\"text\" name=\"name\" id=\"name\" value={name} onChange={this.handleChange} />\n                <label htmlFor=\"job\">Job</label>\n                <input type=\"text\" name=\"job\" id=\"job\" value={job} onChange={this.handleChange} />\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n            </form>\n        );\n    }\n}\n\nexport default Form;","import React, {Component} from \"react\";\nimport Table from \"./Table\";\nimport Form from \"./Form\";\n\nclass App extends Component {\n    state = {\n        characters: [],\n    };\n\n    removeCharacter = (index) => {\n        const {characters} = this.state;\n\n        this.setState({\n            characters: characters.filter((character, i) => {\n                return i !== index;\n            })\n        });\n    };\n\n    handleSubmit = (character) => {\n        this.setState({\n            characters: [...this.state.characters, character]\n        });\n    };\n\n    render(){\n        const {characters} = this.state;\n        return(\n            <div className=\"container\">\n                <Table characterData={characters} removeCharacter={this.removeCharacter} />\n                <Form handleSubmit={this.handleSubmit} />\n            </div>\n        );\n    }\n};\n\nexport default App;","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\"\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}